services:
  db:
    restart: always
    image: rpi-cluster-4b-1gb-1:5000/pypi_scraper/db:${STACK_VERSION:-latest}
    networks:
      - db_net
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: pypi_scraper
      POSTGRES_PASSWORD: password
      POSTGRES_DB: defaultdb
    deploy:
      restart_policy:
        condition: any
      placement:
          constraints:
            - node.labels.storage==true
    volumes:
      - /mnt/ssd/postgres:/var/lib/postgresql/data

  broker:
    restart: always
    image: rabbitmq:3-management-alpine
    networks:
      - broker_net
    ports:
      - '8080:15672'
      - '5672:5672'
    environment:
      RABBITMQ_DEFAULT_USER: pypi_scraper
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: pypi_scraper
    deploy:
      restart_policy:
        condition: any
      placement:
          constraints:
            - node.labels.storage==true
    volumes:
      - /mnt/ssd/rabbit:/var/lib/postgresql/data

  package_name_processor:
    image: rpi-cluster-4b-1gb-1:5000/pypi_scraper/app:${STACK_VERSION:-latest}
    command: ["poetry", "run", "python", "pipdepgraph/entrypoints/process_known_package_names_rmq.py"]
    deploy:
      restart_policy:
        condition: any
      replicas: 1
      placement:
        constraints:
          - node.labels.storage!=true
          - node.labels.role!=manager
    networks:
      - db_net
      - broker_net
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: defaultdb
      POSTGRES_USER: pypi_scraper
      POSTGRES_PASSWORD: password
      RABBITMQ_HOST: broker
      RABBITMQ_VHOST: pypi_scraper
      RABBITMQ_USERNAME: pypi_scraper
      RABBITMQ_PASSWORD: password
      RABBITMQ_CTAG_PREFIX: "package_name_processor.{{.Task.Slot}}."
    depends_on:
      - db
      - broker

  version_distribution_processor:
    image: rpi-cluster-4b-1gb-1:5000/pypi_scraper/app:${STACK_VERSION:-latest}
    deploy:
      restart_policy:
        condition: any
      replicas: 12
      placement:
        constraints:
          - node.labels.storage!=true
          - node.labels.role!=manager
    command: ["poetry", "run", "python", "pipdepgraph/entrypoints/process_version_distributions_rmq.py"]
    networks:
      - db_net
      - broker_net
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: defaultdb
      POSTGRES_USER: pypi_scraper
      POSTGRES_PASSWORD: password
      RABBITMQ_HOST: broker
      RABBITMQ_VHOST: pypi_scraper
      RABBITMQ_USERNAME: pypi_scraper
      RABBITMQ_PASSWORD: password
      RABBITMQ_CTAG_PREFIX: "version_distribution_processor.{{.Task.Slot}}."
      RABBITMQ_VD_SUB_PREFETCH: 1000
    depends_on:
      - db
      - broker

  unprocessed_record_loader:
    image: rpi-cluster-4b-1gb-1:5000/pypi_scraper/app:${STACK_VERSION:-latest}
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1
      placement:
        constraints:
          - node.labels.storage==true
    command: ["poetry", "run", "python", "pipdepgraph/entrypoints/unprocessed_record_loader_rmq.py"]
    networks:
      - db_net
      - broker_net
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: defaultdb
      POSTGRES_USER: pypi_scraper
      POSTGRES_PASSWORD: password
      RABBITMQ_HOST: broker
      RABBITMQ_VHOST: pypi_scraper
      RABBITMQ_USERNAME: pypi_scraper
      RABBITMQ_PASSWORD: password
      RABBITMQ_CTAG_PREFIX: "unprocessed_record_loader.{{.Task.Slot}}."
    depends_on:
      - db
      - broker

networks:
  db_net:
  broker_net:

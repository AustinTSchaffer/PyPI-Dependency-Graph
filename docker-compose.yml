services:
  db:
    restart: always
    build:
      context: .
      dockerfile: db.Dockerfile
      tags:
        - pypi_scraper/db
    ports:
      - '5432:5432'
    networks:
      - db_net
    environment:
      POSTGRES_USER: pypi_scraper
      POSTGRES_PASSWORD: password
      POSTGRES_DB: defaultdb
    volumes:
      - db:/var/lib/postgresql/data
      - './sql:/docker-entrypoint-initdb.d/'

  broker:
    restart: always
    image: rabbitmq:3-management-alpine
    networks:
      - broker_net
    ports:
      - '8080:15672'
      - '5672:5672'
    environment:
      RABBITMQ_DEFAULT_USER: pypi_scraper
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: pypi_scraper
    volumes:
      - broker:/var/lib/rabbitmq

  package_name_processor:
    restart: always
    build:
      context: .
      dockerfile: app.Dockerfile
      tags:
        - pypi_scraper/app
    command: ["poetry", "run", "python", "pipdepgraph/entrypoints/process_known_package_names_rmq.py"]
    networks:
      - db_net
      - broker_net
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: defaultdb
      POSTGRES_USER: pypi_scraper
      POSTGRES_PASSWORD: password

      RABBITMQ_HOST: broker
      RABBITMQ_VHOST: pypi_scraper
      RABBITMQ_USERNAME: pypi_scraper
      RABBITMQ_PASSWORD: password
    depends_on:
      - db
      - broker

  version_distribution_processor:
    restart: always
    deploy:
      replicas: 5
    build:
      context: .
      dockerfile: app.Dockerfile
      tags:
        - pypi_scraper/app
    command: ["poetry", "run", "python", "pipdepgraph/entrypoints/process_version_distributions_rmq.py"]
    networks:
      - db_net
      - broker_net
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: defaultdb
      POSTGRES_USER: pypi_scraper
      POSTGRES_PASSWORD: password

      RABBITMQ_HOST: broker
      RABBITMQ_VHOST: pypi_scraper
      RABBITMQ_USERNAME: pypi_scraper
      RABBITMQ_PASSWORD: password
    depends_on:
      - db
      - broker

volumes:
  db:
  broker:

networks:
  db_net:
  broker_net:
